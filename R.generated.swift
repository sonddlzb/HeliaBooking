//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 4 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `Crayola`.
    var crayola: RswiftResources.ColorResource { .init(name: "Crayola", path: [], bundle: bundle) }

    /// Color `Light Gray`.
    var lightGray: RswiftResources.ColorResource { .init(name: "Light Gray", path: [], bundle: bundle) }

    /// Color `Lotion`.
    var lotion: RswiftResources.ColorResource { .init(name: "Lotion", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 22 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `AppleLogo`.
    var appleLogo: RswiftResources.ImageResource { .init(name: "AppleLogo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FacebookLogo`.
    var facebookLogo: RswiftResources.ImageResource { .init(name: "FacebookLogo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GoogleLogo`.
    var googleLogo: RswiftResources.ImageResource { .init(name: "GoogleLogo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_arrow_down`.
    var ic_arrow_down: RswiftResources.ImageResource { .init(name: "ic_arrow_down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_booking`.
    var ic_booking: RswiftResources.ImageResource { .init(name: "ic_booking", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_booking_focus`.
    var ic_booking_focus: RswiftResources.ImageResource { .init(name: "ic_booking_focus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_calendar`.
    var ic_calendar: RswiftResources.ImageResource { .init(name: "ic_calendar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_edit`.
    var ic_edit: RswiftResources.ImageResource { .init(name: "ic_edit", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_home`.
    var ic_home: RswiftResources.ImageResource { .init(name: "ic_home", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_home_focus`.
    var ic_home_focus: RswiftResources.ImageResource { .init(name: "ic_home_focus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_no_avt`.
    var ic_no_avt: RswiftResources.ImageResource { .init(name: "ic_no_avt", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_password_hide`.
    var ic_password_hide: RswiftResources.ImageResource { .init(name: "ic_password_hide", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_password_show`.
    var ic_password_show: RswiftResources.ImageResource { .init(name: "ic_password_show", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_payment`.
    var ic_payment: RswiftResources.ImageResource { .init(name: "ic_payment", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_profile`.
    var ic_profile: RswiftResources.ImageResource { .init(name: "ic_profile", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_profile_focus`.
    var ic_profile_focus: RswiftResources.ImageResource { .init(name: "ic_profile_focus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_remember`.
    var ic_remember: RswiftResources.ImageResource { .init(name: "ic_remember", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_search`.
    var ic_search: RswiftResources.ImageResource { .init(name: "ic_search", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_search_focus`.
    var ic_search_focus: RswiftResources.ImageResource { .init(name: "ic_search_focus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `travel1`.
    var travel1: RswiftResources.ImageResource { .init(name: "travel1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `travel2`.
    var travel2: RswiftResources.ImageResource { .init(name: "travel2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `travel3`.
    var travel3: RswiftResources.ImageResource { .init(name: "travel3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.font` struct is generated, and contains static references to 5 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `Outfit-Bold`.
    var outfitBold: RswiftResources.FontResource { .init(name: "Outfit-Bold", bundle: bundle, filename: "Outfit-Bold.otf") }

    /// Font `Outfit-Light`.
    var outfitLight: RswiftResources.FontResource { .init(name: "Outfit-Light", bundle: bundle, filename: "Outfit-Light.otf") }

    /// Font `Outfit-Medium`.
    var outfitMedium: RswiftResources.FontResource { .init(name: "Outfit-Medium", bundle: bundle, filename: "Outfit-Medium.otf") }

    /// Font `Outfit-Regular`.
    var outfitRegular: RswiftResources.FontResource { .init(name: "Outfit-Regular", bundle: bundle, filename: "Outfit-Regular.otf") }

    /// Font `Outfit-SemiBold`.
    var outfitSemiBold: RswiftResources.FontResource { .init(name: "Outfit-SemiBold", bundle: bundle, filename: "Outfit-SemiBold.otf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [outfitBold, outfitLight, outfitMedium, outfitRegular, outfitSemiBold].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 6 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `GoogleService-Info.plist`.
    var googleServiceInfoPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Outfit-Bold.otf`.
    var outfitBoldOtf: RswiftResources.FileResource { .init(name: "Outfit-Bold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Outfit-Light.otf`.
    var outfitLightOtf: RswiftResources.FileResource { .init(name: "Outfit-Light", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Outfit-Medium.otf`.
    var outfitMediumOtf: RswiftResources.FileResource { .init(name: "Outfit-Medium", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Outfit-Regular.otf`.
    var outfitRegularOtf: RswiftResources.FileResource { .init(name: "Outfit-Regular", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Outfit-SemiBold.otf`.
    var outfitSemiBoldOtf: RswiftResources.FileResource { .init(name: "Outfit-SemiBold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 11 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `CancelNotificationDialogView`.
    var cancelNotificationDialogView: RswiftResources.NibReference<CancelNotificationDialogView> { .init(name: "CancelNotificationDialogView", bundle: bundle) }

    /// Nib `ConfirmDialogView`.
    var confirmDialogView: RswiftResources.NibReference<ConfirmDialogView> { .init(name: "ConfirmDialogView", bundle: bundle) }

    /// Nib `IntroductionViewController`.
    var introductionViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "IntroductionViewController", bundle: bundle) }

    /// Nib `loginWithOtherMethodViewController`.
    var loginWithOtherMethodViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "loginWithOtherMethodViewController", bundle: bundle) }

    /// Nib `PaymentNotificationDialogView`.
    var paymentNotificationDialogView: RswiftResources.NibReference<PaymentNotificationDialogView> { .init(name: "PaymentNotificationDialogView", bundle: bundle) }

    /// Nib `SignInOtherMethod`.
    var signInOtherMethod: RswiftResources.NibReference<UIKit.UIViewController> { .init(name: "SignInOtherMethod", bundle: bundle) }

    /// Nib `SignInViewController`.
    var signInViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SignInViewController", bundle: bundle) }

    /// Nib `SignInWithPassWordViewController`.
    var signInWithPassWordViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SignInWithPassWordViewController", bundle: bundle) }

    /// Nib `SignUpViewController`.
    var signUpViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "SignUpViewController", bundle: bundle) }

    /// Nib `SlideCollectionViewCell`.
    var slideCollectionViewCell: RswiftResources.NibReference<SlideCollectionViewCell> { .init(name: "SlideCollectionViewCell", bundle: bundle) }

    /// Nib `TopicTabBarViewCell`.
    var topicTabBarViewCell: RswiftResources.NibReference<TopicTabBarViewCell> { .init(name: "TopicTabBarViewCell", bundle: bundle) }

    func validate() throws {
      if UIKit.UIImage(named: "ic_payment", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ic_payment' is used in nib 'CancelNotificationDialogView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ic_payment", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ic_payment' is used in nib 'PaymentNotificationDialogView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "FacebookLogo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'FacebookLogo' is used in nib 'SignInOtherMethod', but couldn't be loaded.") }
      if UIKit.UIImage(named: "AppleLogo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'AppleLogo' is used in nib 'SignInViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "FacebookLogo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'FacebookLogo' is used in nib 'SignInViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "GoogleLogo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'GoogleLogo' is used in nib 'SignInViewController', but couldn't be loaded.") }
      if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "arrow.backward") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'arrow.backward' is used in nib 'SignInViewController', but couldn't be loaded.") } }
      if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "arrow.left") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'arrow.left' is used in nib 'SignUpViewController', but couldn't be loaded.") } }
      if UIKit.UIImage(named: "ic_edit", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ic_edit' is used in nib 'SignUpViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ic_no_avt", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ic_no_avt' is used in nib 'SignUpViewController', but couldn't be loaded.") }
      if UIKit.UIImage(named: "travel1", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'travel1' is used in nib 'SlideCollectionViewCell', but couldn't be loaded.") }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `Launch Screen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "Launch Screen"
      func validate() throws {

      }
    }
  }
}